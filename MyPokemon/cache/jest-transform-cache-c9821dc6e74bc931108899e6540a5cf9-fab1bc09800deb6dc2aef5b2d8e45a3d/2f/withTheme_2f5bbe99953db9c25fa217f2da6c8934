3f71fa80267aff0498f0d41acb08f178
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _deepmerge = _interopRequireDefault(require("deepmerge"));
var _hoistNonReactStatics = _interopRequireDefault(require("hoist-non-react-statics"));
var _ThemeProvider = require("./ThemeProvider");
var _theme = _interopRequireDefault(require("./theme"));
var _jsxRuntime = require("react/jsx-runtime");
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var isClassComponent = function isClassComponent(Component) {
  return Boolean(Component.prototype && Component.prototype.isReactComponent);
};
var ThemedComponent = function ThemedComponent(WrappedComponent, themeKey, displayName) {
  return Object.assign(function (props, forwardedRef) {
    var _children = props.children,
      rest = __rest(props, ["children"]);
    return (0, _jsxRuntime.jsx)(_ThemeProvider.ThemeConsumer, {
      children: function children(context) {
        if (!context) {
          var _newProps = Object.assign(Object.assign({}, rest), {
            theme: _theme.default,
            children: _children
          });
          return isClassComponent(WrappedComponent) ? (0, _jsxRuntime.jsx)(WrappedComponent, Object.assign({
            ref: forwardedRef
          }, _newProps)) : (0, _jsxRuntime.jsx)(WrappedComponent, Object.assign({}, _newProps));
        }
        var theme = context.theme,
          updateTheme = context.updateTheme,
          replaceTheme = context.replaceTheme;
        var newProps = Object.assign(Object.assign({
          theme: theme,
          updateTheme: updateTheme,
          replaceTheme: replaceTheme
        }, (0, _deepmerge.default)(themeKey && theme[themeKey] || {}, rest, {
          clone: false
        })), {
          children: _children
        });
        if (isClassComponent(WrappedComponent)) {
          return (0, _jsxRuntime.jsx)(WrappedComponent, Object.assign({
            ref: forwardedRef
          }, newProps));
        }
        return (0, _jsxRuntime.jsx)(WrappedComponent, Object.assign({}, newProps));
      }
    });
  }, {
    displayName: displayName
  });
};
function withTheme(WrappedComponent, themeKey) {
  var name = themeKey ? "Themed." + themeKey : "Themed." + (WrappedComponent.displayName || WrappedComponent.name || 'Component');
  var Component = ThemedComponent(WrappedComponent, themeKey, name);
  if (isClassComponent(WrappedComponent)) {
    return (0, _hoistNonReactStatics.default)(_react.default.forwardRef(Component), WrappedComponent);
  }
  return Component;
}
var _default = withTheme;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsImlzQ2xhc3NDb21wb25lbnQiLCJDb21wb25lbnQiLCJCb29sZWFuIiwiaXNSZWFjdENvbXBvbmVudCIsIlRoZW1lZENvbXBvbmVudCIsIldyYXBwZWRDb21wb25lbnQiLCJ0aGVtZUtleSIsImRpc3BsYXlOYW1lIiwiYXNzaWduIiwicHJvcHMiLCJmb3J3YXJkZWRSZWYiLCJjaGlsZHJlbiIsInJlc3QiLCJjb250ZXh0IiwibmV3UHJvcHMiLCJ0aGVtZSIsIkRlZmF1bHRUaGVtZSIsInVwZGF0ZVRoZW1lIiwicmVwbGFjZVRoZW1lIiwiZGVlcG1lcmdlIiwiY2xvbmUiLCJ3aXRoVGhlbWUiLCJuYW1lIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJSZWFjdCIsImZvcndhcmRSZWYiXSwic291cmNlcyI6WyJ3aXRoVGhlbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fcmVzdCA9ICh0aGlzICYmIHRoaXMuX19yZXN0KSB8fCBmdW5jdGlvbiAocywgZSkge1xuICAgIHZhciB0ID0ge307XG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXG4gICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIGlmIChzICE9IG51bGwgJiYgdHlwZW9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPT09IFwiZnVuY3Rpb25cIilcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGUuaW5kZXhPZihwW2ldKSA8IDAgJiYgT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZS5jYWxsKHMsIHBbaV0pKVxuICAgICAgICAgICAgICAgIHRbcFtpXV0gPSBzW3BbaV1dO1xuICAgICAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBkZWVwbWVyZ2UgZnJvbSAnZGVlcG1lcmdlJztcbmltcG9ydCBob2lzdE5vblJlYWN0U3RhdGljcyBmcm9tICdob2lzdC1ub24tcmVhY3Qtc3RhdGljcyc7XG5pbXBvcnQgeyBUaGVtZUNvbnN1bWVyIH0gZnJvbSAnLi9UaGVtZVByb3ZpZGVyJztcbmltcG9ydCBEZWZhdWx0VGhlbWUgZnJvbSAnLi90aGVtZSc7XG5jb25zdCBpc0NsYXNzQ29tcG9uZW50ID0gKENvbXBvbmVudCkgPT4gQm9vbGVhbihDb21wb25lbnQucHJvdG90eXBlICYmIENvbXBvbmVudC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudCk7XG5jb25zdCBUaGVtZWRDb21wb25lbnQgPSAoV3JhcHBlZENvbXBvbmVudCwgdGhlbWVLZXksIGRpc3BsYXlOYW1lKSA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICAgICAgY29uc3QgeyBjaGlsZHJlbiB9ID0gcHJvcHMsIHJlc3QgPSBfX3Jlc3QocHJvcHMsIFtcImNoaWxkcmVuXCJdKTtcbiAgICAgICAgcmV0dXJuICg8VGhlbWVDb25zdW1lcj5cbiAgICAgICAgICB7KGNvbnRleHQpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBJZiB1c2VyIGlzbid0IHVzaW5nIFRoZW1lUHJvdmlkZXJcbiAgICAgICAgICAgICAgICBpZiAoIWNvbnRleHQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3UHJvcHMgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHJlc3QpLCB7IHRoZW1lOiBEZWZhdWx0VGhlbWUsIGNoaWxkcmVuIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXNDbGFzc0NvbXBvbmVudChXcmFwcGVkQ29tcG9uZW50KSA/ICg8V3JhcHBlZENvbXBvbmVudCByZWY9e2ZvcndhcmRlZFJlZn0gey4uLm5ld1Byb3BzfS8+KSA6ICg8V3JhcHBlZENvbXBvbmVudCB7Li4ubmV3UHJvcHN9Lz4pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCB7IHRoZW1lLCB1cGRhdGVUaGVtZSwgcmVwbGFjZVRoZW1lIH0gPSBjb250ZXh0O1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld1Byb3BzID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgdGhlbWUsXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVRoZW1lLFxuICAgICAgICAgICAgICAgICAgICByZXBsYWNlVGhlbWUgfSwgZGVlcG1lcmdlKCh0aGVtZUtleSAmJlxuICAgICAgICAgICAgICAgICAgICB0aGVtZVt0aGVtZUtleV0pIHx8XG4gICAgICAgICAgICAgICAgICAgIHt9LCByZXN0LCB7XG4gICAgICAgICAgICAgICAgICAgIGNsb25lOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9KSksIHsgY2hpbGRyZW4gfSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzQ2xhc3NDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDxXcmFwcGVkQ29tcG9uZW50IHJlZj17Zm9yd2FyZGVkUmVmfSB7Li4ubmV3UHJvcHN9Lz47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiA8V3JhcHBlZENvbXBvbmVudCB7Li4ubmV3UHJvcHN9Lz47XG4gICAgICAgICAgICB9fVxuICAgICAgICA8L1RoZW1lQ29uc3VtZXI+KTtcbiAgICB9LCB7IGRpc3BsYXlOYW1lOiBkaXNwbGF5TmFtZSB9KTtcbn07XG5mdW5jdGlvbiB3aXRoVGhlbWUoV3JhcHBlZENvbXBvbmVudCwgdGhlbWVLZXkpIHtcbiAgICBjb25zdCBuYW1lID0gdGhlbWVLZXlcbiAgICAgICAgPyBgVGhlbWVkLiR7dGhlbWVLZXl9YFxuICAgICAgICA6IGBUaGVtZWQuJHtXcmFwcGVkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IFdyYXBwZWRDb21wb25lbnQubmFtZSB8fCAnQ29tcG9uZW50J31gO1xuICAgIGNvbnN0IENvbXBvbmVudCA9IFRoZW1lZENvbXBvbmVudChXcmFwcGVkQ29tcG9uZW50LCB0aGVtZUtleSwgbmFtZSk7XG4gICAgaWYgKGlzQ2xhc3NDb21wb25lbnQoV3JhcHBlZENvbXBvbmVudCkpIHtcbiAgICAgICAgcmV0dXJuIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKFJlYWN0LmZvcndhcmRSZWYoQ29tcG9uZW50KSwgV3JhcHBlZENvbXBvbmVudCk7XG4gICAgfVxuICAgIHJldHVybiBDb21wb25lbnQ7XG59XG5leHBvcnQgZGVmYXVsdCB3aXRoVGhlbWU7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQW1DO0FBZm5DLElBQUlBLE1BQU0sR0FBSSxVQUFRLFNBQUtBLE1BQU0sSUFBSyxVQUFVQyxDQUFDLEVBQUVDLENBQUMsRUFBRTtFQUNsRCxJQUFJQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0VBQ1YsS0FBSyxJQUFJQyxDQUFDLElBQUlILENBQUMsRUFBRSxJQUFJSSxNQUFNLENBQUNDLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUNQLENBQUMsRUFBRUcsQ0FBQyxDQUFDLElBQUlGLENBQUMsQ0FBQ08sT0FBTyxDQUFDTCxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQy9FRCxDQUFDLENBQUNDLENBQUMsQ0FBQyxHQUFHSCxDQUFDLENBQUNHLENBQUMsQ0FBQztFQUNmLElBQUlILENBQUMsSUFBSSxJQUFJLElBQUksT0FBT0ksTUFBTSxDQUFDSyxxQkFBcUIsS0FBSyxVQUFVLEVBQy9ELEtBQUss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