f10cefdaf9c9a22ee372c0203c31bfad
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _reactNative = require("@testing-library/react-native");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _HomeScreen = _interopRequireDefault(require("../UI/components/screens/HomeScreen"));
var _pokemonRequests = require("../services/pokemonRequests");
var _jsxRuntime = require("react/jsx-runtime");
global.fetch = require('jest-fetch-mock');
var content = {
  results: [{
    name: 'bulbasaur',
    url: 'https://pokeapi.co/api/v2/pokemon/1/'
  }, {
    name: 'ivysaur',
    url: 'https://pokeapi.co/api/v2/pokemon/2/'
  }, {
    name: 'venusaur',
    url: 'https://pokeapi.co/api/v2/pokemon/3/'
  }]
};
beforeEach(function () {
  fetch.resetMocks();
});
test('returns result if object', function () {
  fetch.mockResponseOnce(JSON.stringify(content));
  var onResponse = jest.fn();
  var onError = jest.fn();
  return (0, _pokemonRequests.getAllPokemon)().then(onResponse).catch(onError).finally(function () {
    expect(onResponse).toHaveBeenCalled();
    expect(onResponse.mock.calls[0][0]).toEqual(content);
    console.log(onResponse.mock.calls);
  });
});
test('Does home screen work', (0, _asyncToGenerator2.default)(function* () {
  fetch.mockResponseOnce(JSON.stringify(content));
  jest.useFakeTimers();
  var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_HomeScreen.default, {
      navigation: {
        setOptions: jest.fn()
      }
    })),
    getByText = _render.getByText;
  (0, _reactNative.act)(function () {
    jest.runAllTimers();
  });
  expect(getByText('Please work')).toBeOnTheScreen();
  expect(_reactNative.screen.getByText('venusaur')).toBeOnTheScreen();
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsInJlcXVpcmUiLCJjb250ZW50IiwicmVzdWx0cyIsIm5hbWUiLCJ1cmwiLCJiZWZvcmVFYWNoIiwicmVzZXRNb2NrcyIsInRlc3QiLCJtb2NrUmVzcG9uc2VPbmNlIiwiSlNPTiIsInN0cmluZ2lmeSIsIm9uUmVzcG9uc2UiLCJqZXN0IiwiZm4iLCJvbkVycm9yIiwiZ2V0QWxsUG9rZW1vbiIsInRoZW4iLCJjYXRjaCIsImZpbmFsbHkiLCJleHBlY3QiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwibW9jayIsImNhbGxzIiwidG9FcXVhbCIsImNvbnNvbGUiLCJsb2ciLCJ1c2VGYWtlVGltZXJzIiwicmVuZGVyIiwic2V0T3B0aW9ucyIsImdldEJ5VGV4dCIsImFjdCIsInJ1bkFsbFRpbWVycyIsInRvQmVPblRoZVNjcmVlbiIsInNjcmVlbiJdLCJzb3VyY2VzIjpbIkhvbWVTY3JlZW4udGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQsIGFjdH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIb21lU2NyZWVuIGZyb20gJy4uL1VJL2NvbXBvbmVudHMvc2NyZWVucy9Ib21lU2NyZWVuJztcbmltcG9ydCB7Z2V0QWxsUG9rZW1vbiwgZ2V0T25lUG9rZW1vbn0gZnJvbSAnLi4vc2VydmljZXMvcG9rZW1vblJlcXVlc3RzJztcblxuZ2xvYmFsLmZldGNoID0gcmVxdWlyZSgnamVzdC1mZXRjaC1tb2NrJyk7XG5cbmxldCBjb250ZW50ID0ge1xuICByZXN1bHRzOiBbXG4gICAge1xuICAgICAgbmFtZTogJ2J1bGJhc2F1cicsXG4gICAgICB1cmw6ICdodHRwczovL3Bva2VhcGkuY28vYXBpL3YyL3Bva2Vtb24vMS8nLFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogJ2l2eXNhdXInLFxuICAgICAgdXJsOiAnaHR0cHM6Ly9wb2tlYXBpLmNvL2FwaS92Mi9wb2tlbW9uLzIvJyxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICd2ZW51c2F1cicsXG4gICAgICB1cmw6ICdodHRwczovL3Bva2VhcGkuY28vYXBpL3YyL3Bva2Vtb24vMy8nLFxuICAgIH0sXG4gIF0sXG59O1xuXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgZmV0Y2gucmVzZXRNb2NrcygpO1xufSk7XG5cbnRlc3QoJ3JldHVybnMgcmVzdWx0IGlmIG9iamVjdCcsICgpID0+IHtcbiAgZmV0Y2gubW9ja1Jlc3BvbnNlT25jZShKU09OLnN0cmluZ2lmeShjb250ZW50KSk7XG4gIGNvbnN0IG9uUmVzcG9uc2UgPSBqZXN0LmZuKCk7XG4gIGNvbnN0IG9uRXJyb3IgPSBqZXN0LmZuKCk7XG4gIHJldHVybiBnZXRBbGxQb2tlbW9uKClcbiAgICAudGhlbihvblJlc3BvbnNlKVxuICAgIC5jYXRjaChvbkVycm9yKVxuICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgIGV4cGVjdChvblJlc3BvbnNlKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICBleHBlY3Qob25SZXNwb25zZS5tb2NrLmNhbGxzWzBdWzBdKS50b0VxdWFsKGNvbnRlbnQpO1xuICAgICAgY29uc29sZS5sb2cob25SZXNwb25zZS5tb2NrLmNhbGxzKTtcbiAgICB9KTtcbn0pO1xuXG50ZXN0KCdEb2VzIGhvbWUgc2NyZWVuIHdvcmsnLCBhc3luYyAoKSA9PiB7XG4gIGZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoY29udGVudCkpO1xuICBqZXN0LnVzZUZha2VUaW1lcnMoKTtcbiAgY29uc3Qge2dldEJ5VGV4dH0gPSByZW5kZXIoXG4gICAgPEhvbWVTY3JlZW4gbmF2aWdhdGlvbj17e3NldE9wdGlvbnM6IGplc3QuZm4oKX19IC8+LFxuICApO1xuICBhY3QoKCkgPT4ge1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gIH0pO1xuICBleHBlY3QoZ2V0QnlUZXh0KCdQbGVhc2Ugd29yaycpKS50b0JlT25UaGVTY3JlZW4oKTtcbiAgZXhwZWN0KHNjcmVlbi5nZXRCeVRleHQoJ3ZlbnVzYXVyJykpLnRvQmVPblRoZVNjcmVlbigpO1xuICBcbiAgXG4gIC8vY29uc3QgcG9rZXMgPSBhd2FpdCBzY3JlZW4uZ2V0QWxsQnlUZXN0SWQoJ2JvYicpO1xuICAvL2V4cGVjdChwb2tlcykudG9IYXZlTGVuZ3RoKDMpO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQXlFO0FBRXpFQSxNQUFNLENBQUNDLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0FBRXpDLElBQUlDLE9BQU8sR0FBRztFQUNaQyxPQUFPLEVBQUUsQ0FDUDtJQUNFQyxJQUFJLEVBQUUsV0FBVztJQUNqQkMsR0FBRyxFQUFFO0VBQ1AsQ0FBQyxFQUNEO0lBQ0VELElBQUksRUFBRSxTQUFTO0lBQ2ZDLEdBQUcsRUFBRTtFQUNQLENBQUMsRUFDRDtJQUNFRCxJQUFJLEVBQUUsVUFBVTtJQUNoQkMsR0FBRyxFQUFFO0VBQ1AsQ0FBQztBQUVMLENBQUM7QUFFREMsVUFBVSxDQUFDLFlBQU07RUFDZk4sS0FBSyxDQUFDTyxVQUFVLEVBQUU7QUFDcEIsQ0FBQyxDQUFDO0FBRUZDLElBQUksQ0FBQywwQkFBMEIsRUFBRSxZQUFNO0VBQ3JDUixLQUFLLENBQUNTLGdCQUFnQixDQUFDQyxJQUFJLENBQUNDLFNBQVMsQ0FBQ1QsT0FBTyxDQUFDLENBQUM7RUFDL0MsSUFBTVUsVUFBVSxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRTtFQUM1QixJQUFNQyxPQUFPLEdBQUdGLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0VBQ3pCLE9BQU8sSUFBQUUsOEJBQWEsR0FBRSxDQUNuQkMsSUFBSSxDQUFDTCxVQUFVLENBQUMsQ0FDaEJNLEtBQUssQ0FBQ0gsT0FBTyxDQUFDLENBQ2RJLE9BQU8sQ0FBQyxZQUFNO0lBQ2JDLE1BQU0sQ0FBQ1IsVUFBVSxDQUFDLENBQUNTLGdCQUFnQixFQUFFO0lBQ3JDRCxNQUFNLENBQUNSLFVBQVUsQ0FBQ1UsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQ0MsT0FBTyxDQUFDdEIsT0FBTyxDQUFDO0lBQ3BEdUIsT0FBTyxDQUFDQyxHQUFHLENBQUNkLFVBQVUsQ0FBQ1UsSUFBSSxDQUFDQyxLQUFLLENBQUM7RUFDcEMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUZmLElBQUksQ0FBQyx1QkFBdUIsa0NBQUUsYUFBWTtFQUN4Q1IsS0FBSyxDQUFDUyxnQkFBZ0IsQ0FBQ0MsSUFBSSxDQUFDQyxTQUFTLENBQUNULE9BQU8sQ0FBQyxDQUFDO0VBQy9DVyxJQUFJLENBQUNjLGFBQWEsRUFBRTtFQUNwQixjQUFvQixJQUFBQyxtQkFBTSxFQUN4QixxQkFBQyxtQkFBVTtNQUFDLFVBQVUsRUFBRTtRQUFDQyxVQUFVLEVBQUVoQixJQUFJLENBQUNDLEVBQUU7TUFBRTtJQUFFLEVBQUcsQ0FDcEQ7SUFGTWdCLFNBQVMsV0FBVEEsU0FBUztFQUdoQixJQUFBQyxnQkFBRyxFQUFDLFlBQU07SUFDUmxCLElBQUksQ0FBQ21CLFlBQVksRUFBRTtFQUNyQixDQUFDLENBQUM7RUFDRlosTUFBTSxDQUFDVSxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQ0csZUFBZSxFQUFFO0VBQ2xEYixNQUFNLENBQUNjLG1CQUFNLENBQUNKLFNBQVMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDRyxlQUFlLEVBQUU7QUFLeEQsQ0FBQyxFQUFDIn0=