66a471b7128bc575457a75bd094de8a6
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _ditto = _interopRequireDefault(require("./ditto.json"));
var _reactNative = require("@testing-library/react-native");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _Pokemon = _interopRequireDefault(require("../UI/components/Pokemon"));
var _pokemonRequests = require("../services/pokemonRequests");
var _jsxRuntime = require("react/jsx-runtime");
global.fetch = require('jest-fetch-mock');
beforeEach(function () {
  fetch.resetMocks();
});
test('Does home screen work', (0, _asyncToGenerator2.default)(function* () {
  fetch.mockResponseOnce(JSON.stringify(_ditto.default));
  jest.useFakeTimers();
  var handlePress = jest.fn();
  (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Pokemon.default, {
    details: {
      name: 'ditto',
      url: 'https://pokeapi.co/api/v2/pokemon/1/'
    },
    press: handlePress
  }));
  yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
    jest.runAllTimers();
  }));
  expect(_reactNative.screen.getByText('ditto')).toBeTruthy();
  console.log(_reactNative.screen.getByTestId('sprite').props);
  _reactNative.fireEvent.press(yield _reactNative.screen.findByTestId('pressable'));
  expect(handlePress).toBeCalledWith(_ditto.default);
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsInJlcXVpcmUiLCJiZWZvcmVFYWNoIiwicmVzZXRNb2NrcyIsInRlc3QiLCJtb2NrUmVzcG9uc2VPbmNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRpdHRvIiwiamVzdCIsInVzZUZha2VUaW1lcnMiLCJoYW5kbGVQcmVzcyIsImZuIiwicmVuZGVyIiwibmFtZSIsInVybCIsImFjdCIsInJ1bkFsbFRpbWVycyIsImV4cGVjdCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVUcnV0aHkiLCJjb25zb2xlIiwibG9nIiwiZ2V0QnlUZXN0SWQiLCJwcm9wcyIsImZpcmVFdmVudCIsInByZXNzIiwiZmluZEJ5VGVzdElkIiwidG9CZUNhbGxlZFdpdGgiXSwic291cmNlcyI6WyJQb2tlbW9uLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpdHRvIGZyb20gJy4vZGl0dG8uanNvbic7XG5pbXBvcnQge3JlbmRlciwgc2NyZWVuLCBmaXJlRXZlbnQsIGFjdH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQb2tlbW9uIGZyb20gJy4uL1VJL2NvbXBvbmVudHMvUG9rZW1vbic7XG5pbXBvcnQge2dldE9uZVBva2Vtb259IGZyb20gJy4uL3NlcnZpY2VzL3Bva2Vtb25SZXF1ZXN0cyc7XG5cbmdsb2JhbC5mZXRjaCA9IHJlcXVpcmUoJ2plc3QtZmV0Y2gtbW9jaycpO1xuXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgZmV0Y2gucmVzZXRNb2NrcygpO1xufSk7XG5cbi8qXG50ZXN0KCdyZXR1cm5zIHJlc3VsdCBpZiBvYmplY3QnLCAoKSA9PiB7XG4gIGZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoZGl0dG8pKTtcbiAgY29uc3Qgb25SZXNwb25zZSA9IGplc3QuZm4oKTtcbiAgY29uc3Qgb25FcnJvciA9IGplc3QuZm4oKTtcbiAgcmV0dXJuIGdldE9uZVBva2Vtb24oKVxuICAgIC50aGVuKG9uUmVzcG9uc2UpXG4gICAgLmNhdGNoKG9uRXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgZXhwZWN0KG9uUmVzcG9uc2UpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIGV4cGVjdChvblJlc3BvbnNlLm1vY2suY2FsbHNbMF1bMF0pLnRvRXF1YWwoZGl0dG8pO1xuICAgICAgY29uc29sZS5sb2cob25SZXNwb25zZS5tb2NrLmNhbGxzKTtcbiAgICB9KTtcbn0pO1xuKi9cblxudGVzdCgnRG9lcyBob21lIHNjcmVlbiB3b3JrJywgYXN5bmMgKCkgPT4ge1xuICBmZXRjaC5tb2NrUmVzcG9uc2VPbmNlKEpTT04uc3RyaW5naWZ5KGRpdHRvKSk7XG4gIGplc3QudXNlRmFrZVRpbWVycygpO1xuICBjb25zdCBoYW5kbGVQcmVzcyA9IGplc3QuZm4oKTtcbiAgcmVuZGVyKFxuICAgIDxQb2tlbW9uXG4gICAgICBkZXRhaWxzPXt7XG4gICAgICAgIG5hbWU6ICdkaXR0bycsXG4gICAgICAgIHVybDogJ2h0dHBzOi8vcG9rZWFwaS5jby9hcGkvdjIvcG9rZW1vbi8xLycsXG4gICAgICB9fVxuICAgICAgcHJlc3M9e2hhbmRsZVByZXNzfVxuICAgIC8+LFxuICApO1xuICBhd2FpdCBhY3QoYXN5bmMgKCkgPT4ge1xuICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gIH0pO1xuICBleHBlY3Qoc2NyZWVuLmdldEJ5VGV4dCgnZGl0dG8nKSkudG9CZVRydXRoeSgpO1xuICBjb25zb2xlLmxvZyhzY3JlZW4uZ2V0QnlUZXN0SWQoJ3Nwcml0ZScpLnByb3BzKTtcbiAgLy9jb25zb2xlLmxvZyhhd2FpdCBzY3JlZW4uZmluZEJ5VGVzdElkKCdwcmVzc2FibGUnKSk7XG4gIGZpcmVFdmVudC5wcmVzcyhhd2FpdCBzY3JlZW4uZmluZEJ5VGVzdElkKCdwcmVzc2FibGUnKSk7XG4gICAgZXhwZWN0KGhhbmRsZVByZXNzKS50b0JlQ2FsbGVkV2l0aChkaXR0byk7XG4gICAvLyBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzcHJpdGUnKS5wcm9wcyk7XG5cbiAgLy9jb25zdCBwb2tlcyA9IGF3YWl0IHNjcmVlbi5nZXRBbGxCeVRlc3RJZCgnYm9iJyk7XG4gIC8vZXhwZWN0KHBva2VzKS50b0hhdmVMZW5ndGgoMyk7XG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUEwRDtBQUUxREEsTUFBTSxDQUFDQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUV6Q0MsVUFBVSxDQUFDLFlBQU07RUFDZkYsS0FBSyxDQUFDRyxVQUFVLEVBQUU7QUFDcEIsQ0FBQyxDQUFDO0FBa0JGQyxJQUFJLENBQUMsdUJBQXVCLGtDQUFFLGFBQVk7RUFDeENKLEtBQUssQ0FBQ0ssZ0JBQWdCLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxjQUFLLENBQUMsQ0FBQztFQUM3Q0MsSUFBSSxDQUFDQyxhQUFhLEVBQUU7RUFDcEIsSUFBTUMsV0FBVyxHQUFHRixJQUFJLENBQUNHLEVBQUUsRUFBRTtFQUM3QixJQUFBQyxtQkFBTSxFQUNKLHFCQUFDLGdCQUFPO0lBQ04sT0FBTyxFQUFFO01BQ1BDLElBQUksRUFBRSxPQUFPO01BQ2JDLEdBQUcsRUFBRTtJQUNQLENBQUU7SUFDRixLQUFLLEVBQUVKO0VBQVksRUFDbkIsQ0FDSDtFQUNELE1BQU0sSUFBQUssZ0JBQUcsa0NBQUMsYUFBWTtJQUNwQlAsSUFBSSxDQUFDUSxZQUFZLEVBQUU7RUFDckIsQ0FBQyxFQUFDO0VBQ0ZDLE1BQU0sQ0FBQ0MsbUJBQU0sQ0FBQ0MsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUNDLFVBQVUsRUFBRTtFQUM5Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUNKLG1CQUFNLENBQUNLLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDO0VBRS9DQyxzQkFBUyxDQUFDQyxLQUFLLE9BQU9SLG1CQUFNLENBQUNTLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztFQUNyRFYsTUFBTSxDQUFDUCxXQUFXLENBQUMsQ0FBQ2tCLGNBQWMsQ0FBQ3JCLGNBQUssQ0FBQztBQUs3QyxDQUFDLEVBQUMifQ==