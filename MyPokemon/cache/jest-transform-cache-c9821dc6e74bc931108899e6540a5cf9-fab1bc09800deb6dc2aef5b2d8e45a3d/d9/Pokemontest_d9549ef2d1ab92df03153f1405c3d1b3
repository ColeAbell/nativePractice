be18b1a6de94fe067ac6be4663f17b74
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _ditto = _interopRequireDefault(require("./ditto.json"));
var _reactNative = require("@testing-library/react-native");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _Pokemon = _interopRequireDefault(require("../UI/components/Pokemon"));
var _pokemonRequests = require("../services/pokemonRequests");
var _jsxRuntime = require("react/jsx-runtime");
global.fetch = require('jest-fetch-mock');
beforeEach(function () {
  fetch.resetMocks();
});
test('returns result if object', function () {
  fetch.mockResponseOnce(JSON.stringify(_ditto.default));
  var onResponse = jest.fn();
  var onError = jest.fn();
  return (0, _pokemonRequests.getOnePokemon)().then(onResponse).catch(onError).finally(function () {
    expect(onResponse).toHaveBeenCalled();
    expect(onResponse.mock.calls[0][0]).toEqual(_ditto.default);
    console.log(onResponse.mock.calls);
  });
});
test('Does home screen work', (0, _asyncToGenerator2.default)(function* () {
  fetch.mockResponseOnce(JSON.stringify(_ditto.default));
  jest.useFakeTimers();
  yield (0, _reactNative.act)((0, _asyncToGenerator2.default)(function* () {
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Pokemon.default, {
      details: {
        name: 'ditto',
        url: 'https://pokeapi.co/api/v2/pokemon/1/'
      },
      press: jest.fn()
    }));
    jest.runAllTimers();
  }));
  expect(_reactNative.screen.getByText('ditto')).toBeOnTheScreen();
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsInJlcXVpcmUiLCJiZWZvcmVFYWNoIiwicmVzZXRNb2NrcyIsInRlc3QiLCJtb2NrUmVzcG9uc2VPbmNlIiwiSlNPTiIsInN0cmluZ2lmeSIsImRpdHRvIiwib25SZXNwb25zZSIsImplc3QiLCJmbiIsIm9uRXJyb3IiLCJnZXRPbmVQb2tlbW9uIiwidGhlbiIsImNhdGNoIiwiZmluYWxseSIsImV4cGVjdCIsInRvSGF2ZUJlZW5DYWxsZWQiLCJtb2NrIiwiY2FsbHMiLCJ0b0VxdWFsIiwiY29uc29sZSIsImxvZyIsInVzZUZha2VUaW1lcnMiLCJhY3QiLCJyZW5kZXIiLCJuYW1lIiwidXJsIiwicnVuQWxsVGltZXJzIiwic2NyZWVuIiwiZ2V0QnlUZXh0IiwidG9CZU9uVGhlU2NyZWVuIl0sInNvdXJjZXMiOlsiUG9rZW1vbi50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkaXR0byBmcm9tICcuL2RpdHRvLmpzb24nO1xuaW1wb3J0IHtyZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50LCBhY3R9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUG9rZW1vbiBmcm9tICcuLi9VSS9jb21wb25lbnRzL1Bva2Vtb24nO1xuaW1wb3J0IHtnZXRPbmVQb2tlbW9ufSBmcm9tICcuLi9zZXJ2aWNlcy9wb2tlbW9uUmVxdWVzdHMnO1xuXG5nbG9iYWwuZmV0Y2ggPSByZXF1aXJlKCdqZXN0LWZldGNoLW1vY2snKTtcblxuYmVmb3JlRWFjaCgoKSA9PiB7XG4gIGZldGNoLnJlc2V0TW9ja3MoKTtcbn0pO1xuXG50ZXN0KCdyZXR1cm5zIHJlc3VsdCBpZiBvYmplY3QnLCAoKSA9PiB7XG4gIGZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoZGl0dG8pKTtcbiAgY29uc3Qgb25SZXNwb25zZSA9IGplc3QuZm4oKTtcbiAgY29uc3Qgb25FcnJvciA9IGplc3QuZm4oKTtcbiAgcmV0dXJuIGdldE9uZVBva2Vtb24oKVxuICAgIC50aGVuKG9uUmVzcG9uc2UpXG4gICAgLmNhdGNoKG9uRXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgZXhwZWN0KG9uUmVzcG9uc2UpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIGV4cGVjdChvblJlc3BvbnNlLm1vY2suY2FsbHNbMF1bMF0pLnRvRXF1YWwoZGl0dG8pO1xuICAgICAgY29uc29sZS5sb2cob25SZXNwb25zZS5tb2NrLmNhbGxzKTtcbiAgICB9KTtcbn0pO1xuXG50ZXN0KCdEb2VzIGhvbWUgc2NyZWVuIHdvcmsnLCBhc3luYyAoKSA9PiB7XG4gIGZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoZGl0dG8pKTtcbiAgamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIGF3YWl0IGFjdChhc3luYyAoKSA9PiB7XG4gICAgcmVuZGVyKFxuICAgICAgPFBva2Vtb25cbiAgICAgICAgZGV0YWlscz17e1xuICAgICAgICAgIG5hbWU6ICdkaXR0bycsXG4gICAgICAgICAgdXJsOiAnaHR0cHM6Ly9wb2tlYXBpLmNvL2FwaS92Mi9wb2tlbW9uLzEvJyxcbiAgICAgICAgfX1cbiAgICAgICAgcHJlc3M9e2plc3QuZm4oKX1cbiAgICAgIC8+LFxuICAgICk7XG4gICAgamVzdC5ydW5BbGxUaW1lcnMoKTtcbiAgfSk7XG4gIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdkaXR0bycpKS50b0JlT25UaGVTY3JlZW4oKTtcblxuICAvL2NvbnN0IHBva2VzID0gYXdhaXQgc2NyZWVuLmdldEFsbEJ5VGVzdElkKCdib2InKTtcbiAgLy9leHBlY3QocG9rZXMpLnRvSGF2ZUxlbmd0aCgzKTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQTBEO0FBRTFEQSxNQUFNLENBQUNDLEtBQUssR0FBR0MsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0FBRXpDQyxVQUFVLENBQUMsWUFBTTtFQUNmRixLQUFLLENBQUNHLFVBQVUsRUFBRTtBQUNwQixDQUFDLENBQUM7QUFFRkMsSUFBSSxDQUFDLDBCQUEwQixFQUFFLFlBQU07RUFDckNKLEtBQUssQ0FBQ0ssZ0JBQWdCLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxjQUFLLENBQUMsQ0FBQztFQUM3QyxJQUFNQyxVQUFVLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0VBQzVCLElBQU1DLE9BQU8sR0FBR0YsSUFBSSxDQUFDQyxFQUFFLEVBQUU7RUFDekIsT0FBTyxJQUFBRSw4QkFBYSxHQUFFLENBQ25CQyxJQUFJLENBQUNMLFVBQVUsQ0FBQyxDQUNoQk0sS0FBSyxDQUFDSCxPQUFPLENBQUMsQ0FDZEksT0FBTyxDQUFDLFlBQU07SUFDYkMsTUFBTSxDQUFDUixVQUFVLENBQUMsQ0FBQ1MsZ0JBQWdCLEVBQUU7SUFDckNELE1BQU0sQ0FBQ1IsVUFBVSxDQUFDVSxJQUFJLENBQUNDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUNiLGNBQUssQ0FBQztJQUNsRGMsT0FBTyxDQUFDQyxHQUFHLENBQUNkLFVBQVUsQ0FBQ1UsSUFBSSxDQUFDQyxLQUFLLENBQUM7RUFDcEMsQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDO0FBRUZoQixJQUFJLENBQUMsdUJBQXVCLGtDQUFFLGFBQVk7RUFDeENKLEtBQUssQ0FBQ0ssZ0JBQWdCLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxjQUFLLENBQUMsQ0FBQztFQUM3Q0UsSUFBSSxDQUFDYyxhQUFhLEVBQUU7RUFDcEIsTUFBTSxJQUFBQyxnQkFBRyxrQ0FBQyxhQUFZO0lBQ3BCLElBQUFDLG1CQUFNLEVBQ0oscUJBQUMsZ0JBQU87TUFDTixPQUFPLEVBQUU7UUFDUEMsSUFBSSxFQUFFLE9BQU87UUFDYkMsR0FBRyxFQUFFO01BQ1AsQ0FBRTtNQUNGLEtBQUssRUFBRWxCLElBQUksQ0FBQ0MsRUFBRTtJQUFHLEVBQ2pCLENBQ0g7SUFDREQsSUFBSSxDQUFDbUIsWUFBWSxFQUFFO0VBQ3JCLENBQUMsRUFBQztFQUNGWixNQUFNLENBQUNhLG1CQUFNLENBQUNDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDQyxlQUFlLEVBQUU7QUFJckQsQ0FBQyxFQUFDIn0=