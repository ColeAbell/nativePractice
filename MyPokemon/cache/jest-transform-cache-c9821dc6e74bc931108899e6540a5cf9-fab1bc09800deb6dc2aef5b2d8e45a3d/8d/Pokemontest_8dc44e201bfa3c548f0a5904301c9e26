0e3e09cd96ba04eb0b1cb3d425404f9d
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _ditto = _interopRequireDefault(require("./ditto.json"));
var _reactNative = require("@testing-library/react-native");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _Pokemon = _interopRequireDefault(require("../UI/components/Pokemon"));
var pokereq = _interopRequireWildcard(require("../services/pokemonRequests"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
global.fetch = require('jest-fetch-mock');
beforeEach(function () {
  fetch.resetMocks();
});
test('Does home screen work', (0, _asyncToGenerator2.default)(function* () {
  console.log(pokereq);
  pokereq.getOnePokemon = jest.fn().mockReturnValue(JSON.stringify(_ditto.default));
  var handlePress = jest.fn();
  (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Pokemon.default, {
    details: {
      name: 'ditto',
      url: 'https://pokeapi.co/api/v2/pokemon/1/'
    },
    press: handlePress
  }));
  yield (0, _reactNative.waitFor)(function () {
    expect(pokereq.getOnePokemon).toHaveReturned(JSON.stringify(_ditto.default));
    console.log("it fired");
  });
  yield (0, _reactNative.waitFor)(function () {
    expect(_reactNative.screen.getByText('ditto')).toBeTruthy();
  });
  expect(_reactNative.screen.getByTestId('sprite').props.source.uri).toEqual('https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/132.png');
  _reactNative.fireEvent.press(yield _reactNative.screen.findByTestId('pressable'));
  expect(handlePress).toBeCalledWith(_ditto.default);
  expect(pokereq.getOnePokemon).toBeCalled();
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsInJlcXVpcmUiLCJiZWZvcmVFYWNoIiwicmVzZXRNb2NrcyIsInRlc3QiLCJjb25zb2xlIiwibG9nIiwicG9rZXJlcSIsImdldE9uZVBva2Vtb24iLCJqZXN0IiwiZm4iLCJtb2NrUmV0dXJuVmFsdWUiLCJKU09OIiwic3RyaW5naWZ5IiwiZGl0dG8iLCJoYW5kbGVQcmVzcyIsInJlbmRlciIsIm5hbWUiLCJ1cmwiLCJ3YWl0Rm9yIiwiZXhwZWN0IiwidG9IYXZlUmV0dXJuZWQiLCJzY3JlZW4iLCJnZXRCeVRleHQiLCJ0b0JlVHJ1dGh5IiwiZ2V0QnlUZXN0SWQiLCJwcm9wcyIsInNvdXJjZSIsInVyaSIsInRvRXF1YWwiLCJmaXJlRXZlbnQiLCJwcmVzcyIsImZpbmRCeVRlc3RJZCIsInRvQmVDYWxsZWRXaXRoIiwidG9CZUNhbGxlZCJdLCJzb3VyY2VzIjpbIlBva2Vtb24udGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZGl0dG8gZnJvbSAnLi9kaXR0by5qc29uJztcbmltcG9ydCB7XG4gIHJlbmRlcixcbiAgc2NyZWVuLFxuICBmaXJlRXZlbnQsXG4gIGFjdCxcbiAgd2FpdEZvcixcbn0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQb2tlbW9uIGZyb20gJy4uL1VJL2NvbXBvbmVudHMvUG9rZW1vbic7XG5pbXBvcnQgKiBhcyBwb2tlcmVxIGZyb20gJy4uL3NlcnZpY2VzL3Bva2Vtb25SZXF1ZXN0cyc7XG5cbmdsb2JhbC5mZXRjaCA9IHJlcXVpcmUoJ2plc3QtZmV0Y2gtbW9jaycpO1xuXG5iZWZvcmVFYWNoKCgpID0+IHtcbiAgZmV0Y2gucmVzZXRNb2NrcygpO1xufSk7XG5cbi8qXG50ZXN0KCdyZXR1cm5zIHJlc3VsdCBpZiBvYmplY3QnLCAoKSA9PiB7XG4gIGZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoZGl0dG8pKTtcbiAgY29uc3Qgb25SZXNwb25zZSA9IGplc3QuZm4oKTtcbiAgY29uc3Qgb25FcnJvciA9IGplc3QuZm4oKTtcbiAgcmV0dXJuIGdldE9uZVBva2Vtb24oKVxuICAgIC50aGVuKG9uUmVzcG9uc2UpXG4gICAgLmNhdGNoKG9uRXJyb3IpXG4gICAgLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgZXhwZWN0KG9uUmVzcG9uc2UpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICAgIGV4cGVjdChvblJlc3BvbnNlLm1vY2suY2FsbHNbMF1bMF0pLnRvRXF1YWwoZGl0dG8pO1xuICAgICAgY29uc29sZS5sb2cob25SZXNwb25zZS5tb2NrLmNhbGxzKTtcbiAgICB9KTtcbn0pO1xuKi9cblxudGVzdCgnRG9lcyBob21lIHNjcmVlbiB3b3JrJywgYXN5bmMgKCkgPT4ge1xuICAvL2ZldGNoLm1vY2tSZXNwb25zZU9uY2UoSlNPTi5zdHJpbmdpZnkoZGl0dG8pKTtcbiAgY29uc29sZS5sb2cocG9rZXJlcSk7XG4gIC8qXG4gIGplc3Quc3B5T24ocG9rZXJlcSwgJ2dldE9uZVBva2Vtb24nKS5tb2NrSW1wbGVtZW50YXRpb24oKCkgPT4ge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkaXR0byk7XG4gIH0pO1xuICAqL1xuICBwb2tlcmVxLmdldE9uZVBva2Vtb24gPSBqZXN0LmZuKCkubW9ja1JldHVyblZhbHVlKEpTT04uc3RyaW5naWZ5KGRpdHRvKSk7XG4gIC8vamVzdC51c2VGYWtlVGltZXJzKCk7XG4gIGNvbnN0IGhhbmRsZVByZXNzID0gamVzdC5mbigpO1xuICAvL2FzeW5jIGZ1bmN0aW9uIHdhaXQoKSB7XG4gIHJlbmRlcihcbiAgICA8UG9rZW1vblxuICAgICAgZGV0YWlscz17e1xuICAgICAgICBuYW1lOiAnZGl0dG8nLFxuICAgICAgICB1cmw6ICdodHRwczovL3Bva2VhcGkuY28vYXBpL3YyL3Bva2Vtb24vMS8nLFxuICAgICAgfX1cbiAgICAgIHByZXNzPXtoYW5kbGVQcmVzc31cbiAgICAvPixcbiAgKTtcblxuICAvL31cbiAgLy9hd2FpdCB3YWl0KCk7XG4gIC8qXG4gICAgYXdhaXQgYWN0KGFzeW5jICgpID0+IHtcbiAgICAgIGplc3QucnVuQWxsVGltZXJzKCk7XG4gICAgfSk7XG4gICAgKi9cbiAgYXdhaXQgd2FpdEZvcigoKSA9PiB7XG4gICAgICBleHBlY3QocG9rZXJlcS5nZXRPbmVQb2tlbW9uKS50b0hhdmVSZXR1cm5lZChKU09OLnN0cmluZ2lmeShkaXR0bykpO1xuICAgICAgY29uc29sZS5sb2coXCJpdCBmaXJlZFwiKTtcbiAgfSk7XG4gIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdkaXR0bycpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzcHJpdGUnKS5wcm9wcy5zb3VyY2UudXJpKS50b0VxdWFsKFxuICAgICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUG9rZUFQSS9zcHJpdGVzL21hc3Rlci9zcHJpdGVzL3Bva2Vtb24vMTMyLnBuZycsXG4gICk7XG5cbiAgZmlyZUV2ZW50LnByZXNzKGF3YWl0IHNjcmVlbi5maW5kQnlUZXN0SWQoJ3ByZXNzYWJsZScpKTtcbiAgZXhwZWN0KGhhbmRsZVByZXNzKS50b0JlQ2FsbGVkV2l0aChkaXR0byk7XG4gIGV4cGVjdChwb2tlcmVxLmdldE9uZVBva2Vtb24pLnRvQmVDYWxsZWQoKTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQXVEO0FBQUE7QUFBQTtBQUV2REEsTUFBTSxDQUFDQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUV6Q0MsVUFBVSxDQUFDLFlBQU07RUFDZkYsS0FBSyxDQUFDRyxVQUFVLEVBQUU7QUFDcEIsQ0FBQyxDQUFDO0FBa0JGQyxJQUFJLENBQUMsdUJBQXVCLGtDQUFFLGFBQVk7RUFFeENDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPLENBQUM7RUFNcEJBLE9BQU8sQ0FBQ0MsYUFBYSxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRSxDQUFDQyxlQUFlLENBQUNDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxjQUFLLENBQUMsQ0FBQztFQUV4RSxJQUFNQyxXQUFXLEdBQUdOLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0VBRTdCLElBQUFNLG1CQUFNLEVBQ0oscUJBQUMsZ0JBQU87SUFDTixPQUFPLEVBQUU7TUFDUEMsSUFBSSxFQUFFLE9BQU87TUFDYkMsR0FBRyxFQUFFO0lBQ1AsQ0FBRTtJQUNGLEtBQUssRUFBRUg7RUFBWSxFQUNuQixDQUNIO0VBU0QsTUFBTSxJQUFBSSxvQkFBTyxFQUFDLFlBQU07SUFDaEJDLE1BQU0sQ0FBQ2IsT0FBTyxDQUFDQyxhQUFhLENBQUMsQ0FBQ2EsY0FBYyxDQUFDVCxJQUFJLENBQUNDLFNBQVMsQ0FBQ0MsY0FBSyxDQUFDLENBQUM7SUFDbkVULE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFVBQVUsQ0FBQztFQUMzQixDQUFDLENBQUM7RUFDRixNQUFNLElBQUFhLG9CQUFPLEVBQUMsWUFBTTtJQUNsQkMsTUFBTSxDQUFDRSxtQkFBTSxDQUFDQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQ0MsVUFBVSxFQUFFO0VBQ2hELENBQUMsQ0FBQztFQUNGSixNQUFNLENBQUNFLG1CQUFNLENBQUNHLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsS0FBSyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxPQUFPLENBQzNELGtGQUFrRixDQUNuRjtFQUVEQyxzQkFBUyxDQUFDQyxLQUFLLE9BQU9ULG1CQUFNLENBQUNVLFlBQVksQ0FBQyxXQUFXLENBQUMsQ0FBQztFQUN2RFosTUFBTSxDQUFDTCxXQUFXLENBQUMsQ0FBQ2tCLGNBQWMsQ0FBQ25CLGNBQUssQ0FBQztFQUN6Q00sTUFBTSxDQUFDYixPQUFPLENBQUNDLGFBQWEsQ0FBQyxDQUFDMEIsVUFBVSxFQUFFO0FBQzVDLENBQUMsRUFBQyJ9