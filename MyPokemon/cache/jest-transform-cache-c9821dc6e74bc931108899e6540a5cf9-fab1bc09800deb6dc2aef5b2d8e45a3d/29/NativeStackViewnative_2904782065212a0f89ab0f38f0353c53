af59b0a8cf3562ab05a5521da405d6ad
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = NativeStackView;
var _elements = require("@react-navigation/elements");
var _native = require("@react-navigation/native");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _reactNativeScreens = require("react-native-screens");
var _warnOnce = _interopRequireDefault(require("warn-once"));
var _useDismissedRouteError = _interopRequireDefault(require("../utils/useDismissedRouteError"));
var _useInvalidPreventRemoveError = _interopRequireDefault(require("../utils/useInvalidPreventRemoveError"));
var _DebugContainer = _interopRequireDefault(require("./DebugContainer"));
var _HeaderConfig = _interopRequireDefault(require("./HeaderConfig"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var isAndroid = _reactNative.Platform.OS === 'android';
var MaybeNestedStack = function MaybeNestedStack(_ref) {
  var options = _ref.options,
    route = _ref.route,
    presentation = _ref.presentation,
    headerHeight = _ref.headerHeight,
    headerTopInsetEnabled = _ref.headerTopInsetEnabled,
    children = _ref.children;
  var _ref4 = (0, _native.useTheme)(),
    colors = _ref4.colors;
  var header = options.header,
    _options$headerShown = options.headerShown,
    headerShown = _options$headerShown === void 0 ? true : _options$headerShown,
    contentStyle = options.contentStyle;
  var isHeaderInModal = isAndroid ? false : presentation !== 'card' && headerShown === true && header === undefined;
  var headerShownPreviousRef = React.useRef(headerShown);
  React.useEffect(function () {
    (0, _warnOnce.default)(!isAndroid && presentation !== 'card' && headerShownPreviousRef.current !== headerShown, "Dynamically changing 'headerShown' in modals will result in remounting the screen and losing all local state. See options for the screen '" + route.name + "'.");
    headerShownPreviousRef.current = headerShown;
  }, [headerShown, presentation, route.name]);
  var content = React.createElement(_DebugContainer.default, {
    style: [styles.container, presentation !== 'transparentModal' && presentation !== 'containedTransparentModal' && {
      backgroundColor: colors.background
    }, contentStyle],
    stackPresentation: presentation === 'card' ? 'push' : presentation
  }, children);
  if (isHeaderInModal) {
    return React.createElement(_reactNativeScreens.ScreenStack, {
      style: styles.container
    }, React.createElement(_reactNativeScreens.Screen, {
      enabled: true,
      style: _reactNative.StyleSheet.absoluteFill
    }, React.createElement(_HeaderConfig.default, _extends({}, options, {
      route: route,
      headerHeight: headerHeight,
      headerTopInsetEnabled: headerTopInsetEnabled,
      canGoBack: true
    })), content));
  }
  return content;
};
var SceneView = function SceneView(_ref2) {
  var _preventedRoutes$rout;
  var index = _ref2.index,
    focused = _ref2.focused,
    descriptor = _ref2.descriptor,
    previousDescriptor = _ref2.previousDescriptor,
    nextDescriptor = _ref2.nextDescriptor,
    onWillDisappear = _ref2.onWillDisappear,
    onAppear = _ref2.onAppear,
    onDisappear = _ref2.onDisappear,
    onDismissed = _ref2.onDismissed,
    onHeaderBackButtonClicked = _ref2.onHeaderBackButtonClicked,
    onNativeDismissCancelled = _ref2.onNativeDismissCancelled;
  var route = descriptor.route,
    navigation = descriptor.navigation,
    options = descriptor.options,
    render = descriptor.render;
  var animationDuration = options.animationDuration,
    _options$animationTyp = options.animationTypeForReplace,
    animationTypeForReplace = _options$animationTyp === void 0 ? 'push' : _options$animationTyp,
    gestureEnabled = options.gestureEnabled,
    header = options.header,
    headerBackButtonMenuEnabled = options.headerBackButtonMenuEnabled,
    headerShown = options.headerShown,
    headerTransparent = options.headerTransparent,
    autoHideHomeIndicator = options.autoHideHomeIndicator,
    navigationBarColor = options.navigationBarColor,
    navigationBarHidden = options.navigationBarHidden,
    orientation = options.orientation,
    statusBarAnimation = options.statusBarAnimation,
    statusBarHidden = options.statusBarHidden,
    statusBarStyle = options.statusBarStyle,
    statusBarTranslucent = options.statusBarTranslucent,
    statusBarColor = options.statusBarColor,
    freezeOnBlur = options.freezeOnBlur;
  var animation = options.animation,
    customAnimationOnGesture = options.customAnimationOnGesture,
    fullScreenGestureEnabled = options.fullScreenGestureEnabled,
    _options$presentation = options.presentation,
    presentation = _options$presentation === void 0 ? 'card' : _options$presentation,
    _options$gestureDirec = options.gestureDirection,
    gestureDirection = _options$gestureDirec === void 0 ? presentation === 'card' ? 'horizontal' : 'vertical' : _options$gestureDirec;
  if (gestureDirection === 'vertical' && _reactNative.Platform.OS === 'ios') {
    if (fullScreenGestureEnabled === undefined) {
      fullScreenGestureEnabled = true;
    }
    if (customAnimationOnGesture === undefined) {
      customAnimationOnGesture = true;
    }
    if (animation === undefined) {
      animation = 'slide_from_bottom';
    }
  }
  var nextGestureDirection = nextDescriptor === null || nextDescriptor === void 0 ? void 0 : nextDescriptor.options.gestureDirection;
  var gestureDirectionOverride = nextGestureDirection != null ? nextGestureDirection : gestureDirection;
  if (index === 0) {
    presentation = 'card';
  }
  var insets = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)();
  var frame = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();
  var isModal = presentation === 'modal' || presentation === 'formSheet';
  var isIPhone = _reactNative.Platform.OS === 'ios' && !(_reactNative.Platform.isPad || _reactNative.Platform.isTV);
  var isLandscape = frame.width > frame.height;
  var isParentHeaderShown = React.useContext(_elements.HeaderShownContext);
  var parentHeaderHeight = React.useContext(_elements.HeaderHeightContext);
  var parentHeaderBack = React.useContext(_elements.HeaderBackContext);
  var topInset = isParentHeaderShown || _reactNative.Platform.OS === 'ios' && isModal || isIPhone && isLandscape ? 0 : insets.top;
  var _ref5 = (0, _native.usePreventRemoveContext)(),
    preventedRoutes = _ref5.preventedRoutes;
  var defaultHeaderHeight = (0, _elements.getDefaultHeaderHeight)(frame, isModal, topInset);
  var _React$useState = React.useState(defaultHeaderHeight),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    customHeaderHeight = _React$useState2[0],
    setCustomHeaderHeight = _React$useState2[1];
  var headerTopInsetEnabled = topInset !== 0;
  var headerHeight = header ? customHeaderHeight : defaultHeaderHeight;
  var headerBack = previousDescriptor ? {
    title: (0, _elements.getHeaderTitle)(previousDescriptor.options, previousDescriptor.route.name)
  } : parentHeaderBack;
  var isRemovePrevented = (_preventedRoutes$rout = preventedRoutes[route.key]) === null || _preventedRoutes$rout === void 0 ? void 0 : _preventedRoutes$rout.preventRemove;
  return React.createElement(_reactNativeScreens.Screen, {
    key: route.key,
    enabled: true,
    style: _reactNative.StyleSheet.absoluteFill,
    customAnimationOnSwipe: customAnimationOnGesture,
    fullScreenSwipeEnabled: fullScreenGestureEnabled,
    gestureEnabled: isAndroid ? false : gestureEnabled,
    homeIndicatorHidden: autoHideHomeIndicator,
    navigationBarColor: navigationBarColor,
    navigationBarHidden: navigationBarHidden,
    replaceAnimation: animationTypeForReplace,
    stackPresentation: presentation === 'card' ? 'push' : presentation,
    stackAnimation: animation,
    screenOrientation: orientation,
    statusBarAnimation: statusBarAnimation,
    statusBarHidden: statusBarHidden,
    statusBarStyle: statusBarStyle,
    statusBarColor: statusBarColor,
    statusBarTranslucent: statusBarTranslucent,
    swipeDirection: gestureDirectionOverride,
    transitionDuration: animationDuration,
    onWillDisappear: onWillDisappear,
    onAppear: onAppear,
    onDisappear: onDisappear,
    onDismissed: onDismissed,
    isNativeStack: true,
    nativeBackButtonDismissalEnabled: false,
    onHeaderBackButtonClicked: onHeaderBackButtonClicked,
    preventNativeDismiss: isRemovePrevented,
    onNativeDismissCancelled: onNativeDismissCancelled,
    freezeOnBlur: freezeOnBlur
  }, React.createElement(_native.NavigationContext.Provider, {
    value: navigation
  }, React.createElement(_native.NavigationRouteContext.Provider, {
    value: route
  }, React.createElement(_elements.HeaderShownContext.Provider, {
    value: isParentHeaderShown || headerShown !== false
  }, React.createElement(_elements.HeaderHeightContext.Provider, {
    value: headerShown !== false ? headerHeight : parentHeaderHeight != null ? parentHeaderHeight : 0
  }, React.createElement(_HeaderConfig.default, _extends({}, options, {
    route: route,
    headerBackButtonMenuEnabled: isRemovePrevented !== undefined ? !isRemovePrevented : headerBackButtonMenuEnabled,
    headerShown: header !== undefined ? false : headerShown,
    headerHeight: headerHeight,
    headerBackTitle: options.headerBackTitle !== undefined ? options.headerBackTitle : undefined,
    headerTopInsetEnabled: headerTopInsetEnabled,
    canGoBack: headerBack !== undefined
  })), React.createElement(_reactNative.View, {
    accessibilityElementsHidden: !focused,
    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',
    style: styles.scene
  }, React.createElement(MaybeNestedStack, {
    options: options,
    route: route,
    presentation: presentation,
    headerHeight: headerHeight,
    headerTopInsetEnabled: headerTopInsetEnabled
  }, React.createElement(_elements.HeaderBackContext.Provider, {
    value: headerBack
  }, render())), header !== undefined && headerShown !== false ? React.createElement(_reactNative.View, {
    onLayout: function onLayout(e) {
      setCustomHeaderHeight(e.nativeEvent.layout.height);
    },
    style: headerTransparent ? styles.absolute : null
  }, header({
    back: headerBack,
    options: options,
    route: route,
    navigation: navigation
  })) : null))))));
};
function NativeStackViewInner(_ref3) {
  var state = _ref3.state,
    navigation = _ref3.navigation,
    descriptors = _ref3.descriptors;
  var _ref6 = (0, _useDismissedRouteError.default)(state),
    setNextDismissedKey = _ref6.setNextDismissedKey;
  (0, _useInvalidPreventRemoveError.default)(descriptors);
  return React.createElement(_reactNativeScreens.ScreenStack, {
    style: styles.container
  }, state.routes.map(function (route, index) {
    var _state$routes, _state$routes2;
    var descriptor = descriptors[route.key];
    var isFocused = state.index === index;
    var previousKey = (_state$routes = state.routes[index - 1]) === null || _state$routes === void 0 ? void 0 : _state$routes.key;
    var nextKey = (_state$routes2 = state.routes[index + 1]) === null || _state$routes2 === void 0 ? void 0 : _state$routes2.key;
    var previousDescriptor = previousKey ? descriptors[previousKey] : undefined;
    var nextDescriptor = nextKey ? descriptors[nextKey] : undefined;
    return React.createElement(SceneView, {
      key: route.key,
      index: index,
      focused: isFocused,
      descriptor: descriptor,
      previousDescriptor: previousDescriptor,
      nextDescriptor: nextDescriptor,
      onWillDisappear: function onWillDisappear() {
        navigation.emit({
          type: 'transitionStart',
          data: {
            closing: true
          },
          target: route.key
        });
      },
      onAppear: function onAppear() {
        navigation.emit({
          type: 'transitionEnd',
          data: {
            closing: false
          },
          target: route.key
        });
      },
      onDisappear: function onDisappear() {
        navigation.emit({
          type: 'transitionEnd',
          data: {
            closing: true
          },
          target: route.key
        });
      },
      onDismissed: function onDismissed(event) {
        navigation.dispatch(Object.assign({}, _native.StackActions.pop(event.nativeEvent.dismissCount), {
          source: route.key,
          target: state.key
        }));
        setNextDismissedKey(route.key);
      },
      onHeaderBackButtonClicked: function onHeaderBackButtonClicked() {
        navigation.dispatch(Object.assign({}, _native.StackActions.pop(), {
          source: route.key,
          target: state.key
        }));
      },
      onNativeDismissCancelled: function onNativeDismissCancelled(event) {
        navigation.dispatch(Object.assign({}, _native.StackActions.pop(event.nativeEvent.dismissCount), {
          source: route.key,
          target: state.key
        }));
      }
    });
  }));
}
function NativeStackView(props) {
  return React.createElement(_elements.SafeAreaProviderCompat, null, React.createElement(NativeStackViewInner, props));
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  scene: {
    flex: 1,
    flexDirection: 'column-reverse'
  },
  absolute: {
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,