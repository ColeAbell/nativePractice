1cd3edd9cd4d84a32087f46270f0bdb0
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.TextElement = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _config = require("../config");
var _helpers = require("../helpers");
var _normalizeText = _interopRequireDefault(require("../helpers/normalizeText"));
var _jsxRuntime = require("react/jsx-runtime");
var __rest = void 0 && (void 0).__rest || function (s, e) {
  var t = {};
  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
  }
  return t;
};
var TextElement = function TextElement(props) {
  var _a;
  var style = props.style,
    theme = props.theme,
    _props$children = props.children,
    children = _props$children === void 0 ? '' : _props$children,
    h1 = props.h1,
    h2 = props.h2,
    h3 = props.h3,
    h4 = props.h4,
    h1Style = props.h1Style,
    h2Style = props.h2Style,
    h3Style = props.h3Style,
    h4Style = props.h4Style,
    rest = __rest(props, ["style", "theme", "children", "h1", "h2", "h3", "h4", "h1Style", "h2Style", "h3Style", "h4Style"]);
  return (0, _jsxRuntime.jsx)(_reactNative.Text, Object.assign({
    style: _reactNative.StyleSheet.flatten([Object.assign(Object.assign({}, _reactNative.Platform.select({
      android: Object.assign({}, _config.fonts.android.regular)
    })), {
      color: (_a = theme === null || theme === void 0 ? void 0 : theme.colors) === null || _a === void 0 ? void 0 : _a.black
    }), style, (h1 || h2 || h3 || h4) && styles.bold, h1 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(40)
    }, h1Style]), h2 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(34)
    }, h2Style]), h3 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(28)
    }, h3Style]), h4 && _reactNative.StyleSheet.flatten([{
      fontSize: (0, _normalizeText.default)(22)
    }, h4Style])])
  }, (0, _helpers.patchWebProps)(rest), {
    children: children
  }));
};
exports.TextElement = TextElement;
TextElement.defaultProps = {
  h1: false,
  h2: false,
  h3: false,
  h4: false,
  style: {},
  h1Style: {},
  h2Style: {},
  h3Style: {},
  h4Style: {}
};
var styles = _reactNative.StyleSheet.create({
  bold: Object.assign({}, _reactNative.Platform.select({
    android: Object.assign({}, _config.fonts.android.bold)
  }))
});
var _default = (0, _config.withTheme)(TextElement, 'Text');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfX3Jlc3QiLCJzIiwiZSIsInQiLCJwIiwiT2JqZWN0IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaW5kZXhPZiIsImdldE93blByb3BlcnR5U3ltYm9scyIsImkiLCJsZW5ndGgiLCJwcm9wZXJ0eUlzRW51bWVyYWJsZSIsIlRleHRFbGVtZW50IiwicHJvcHMiLCJfYSIsInN0eWxlIiwidGhlbWUiLCJjaGlsZHJlbiIsImgxIiwiaDIiLCJoMyIsImg0IiwiaDFTdHlsZSIsImgyU3R5bGUiLCJoM1N0eWxlIiwiaDRTdHlsZSIsInJlc3QiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsImFzc2lnbiIsIlBsYXRmb3JtIiwic2VsZWN0IiwiYW5kcm9pZCIsImZvbnRzIiwicmVndWxhciIsImNvbG9yIiwiY29sb3JzIiwiYmxhY2siLCJzdHlsZXMiLCJib2xkIiwiZm9udFNpemUiLCJub3JtYWxpemUiLCJwYXRjaFdlYlByb3BzIiwiZGVmYXVsdFByb3BzIiwiY3JlYXRlIiwid2l0aFRoZW1lIl0sInNvdXJjZXMiOlsiVGV4dC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19yZXN0ID0gKHRoaXMgJiYgdGhpcy5fX3Jlc3QpIHx8IGZ1bmN0aW9uIChzLCBlKSB7XG4gICAgdmFyIHQgPSB7fTtcbiAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkgJiYgZS5pbmRleE9mKHApIDwgMClcbiAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgaWYgKHMgIT0gbnVsbCAmJiB0eXBlb2YgT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyA9PT0gXCJmdW5jdGlvblwiKVxuICAgICAgICBmb3IgKHZhciBpID0gMCwgcCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMocyk7IGkgPCBwLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXG4gICAgICAgICAgICAgICAgdFtwW2ldXSA9IHNbcFtpXV07XG4gICAgICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgVGV4dCwgU3R5bGVTaGVldCwgUGxhdGZvcm0sIH0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCB7IGZvbnRzLCB3aXRoVGhlbWUgfSBmcm9tICcuLi9jb25maWcnO1xuaW1wb3J0IHsgcGF0Y2hXZWJQcm9wcyB9IGZyb20gJy4uL2hlbHBlcnMnO1xuaW1wb3J0IG5vcm1hbGl6ZSBmcm9tICcuLi9oZWxwZXJzL25vcm1hbGl6ZVRleHQnO1xuY29uc3QgVGV4dEVsZW1lbnQgPSAocHJvcHMpID0+IHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgeyBzdHlsZSwgdGhlbWUsIGNoaWxkcmVuID0gJycsIGgxLCBoMiwgaDMsIGg0LCBoMVN0eWxlLCBoMlN0eWxlLCBoM1N0eWxlLCBoNFN0eWxlIH0gPSBwcm9wcywgcmVzdCA9IF9fcmVzdChwcm9wcywgW1wic3R5bGVcIiwgXCJ0aGVtZVwiLCBcImNoaWxkcmVuXCIsIFwiaDFcIiwgXCJoMlwiLCBcImgzXCIsIFwiaDRcIiwgXCJoMVN0eWxlXCIsIFwiaDJTdHlsZVwiLCBcImgzU3R5bGVcIiwgXCJoNFN0eWxlXCJdKTtcbiAgICByZXR1cm4gKDxUZXh0IHN0eWxlPXtTdHlsZVNoZWV0LmZsYXR0ZW4oW1xuICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBQbGF0Zm9ybS5zZWxlY3Qoe1xuICAgICAgICAgICAgICAgIGFuZHJvaWQ6IE9iamVjdC5hc3NpZ24oe30sIGZvbnRzLmFuZHJvaWQucmVndWxhciksXG4gICAgICAgICAgICB9KSksIHsgY29sb3I6IChfYSA9IHRoZW1lID09PSBudWxsIHx8IHRoZW1lID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0aGVtZS5jb2xvcnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5ibGFjayB9KSxcbiAgICAgICAgICAgIHN0eWxlLFxuICAgICAgICAgICAgKGgxIHx8IGgyIHx8IGgzIHx8IGg0KSAmJiBzdHlsZXMuYm9sZCxcbiAgICAgICAgICAgIGgxICYmIFN0eWxlU2hlZXQuZmxhdHRlbihbeyBmb250U2l6ZTogbm9ybWFsaXplKDQwKSB9LCBoMVN0eWxlXSksXG4gICAgICAgICAgICBoMiAmJiBTdHlsZVNoZWV0LmZsYXR0ZW4oW3sgZm9udFNpemU6IG5vcm1hbGl6ZSgzNCkgfSwgaDJTdHlsZV0pLFxuICAgICAgICAgICAgaDMgJiYgU3R5bGVTaGVldC5mbGF0dGVuKFt7IGZvbnRTaXplOiBub3JtYWxpemUoMjgpIH0sIGgzU3R5bGVdKSxcbiAgICAgICAgICAgIGg0ICYmIFN0eWxlU2hlZXQuZmxhdHRlbihbeyBmb250U2l6ZTogbm9ybWFsaXplKDIyKSB9LCBoNFN0eWxlXSksXG4gICAgICAgIF0pfSB7Li4ucGF0Y2hXZWJQcm9wcyhyZXN0KX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9UZXh0Pik7XG59O1xuVGV4dEVsZW1lbnQuZGVmYXVsdFByb3BzID0ge1xuICAgIGgxOiBmYWxzZSxcbiAgICBoMjogZmFsc2UsXG4gICAgaDM6IGZhbHNlLFxuICAgIGg0OiBmYWxzZSxcbiAgICBzdHlsZToge30sXG4gICAgaDFTdHlsZToge30sXG4gICAgaDJTdHlsZToge30sXG4gICAgaDNTdHlsZToge30sXG4gICAgaDRTdHlsZToge30sXG59O1xuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIGJvbGQ6IE9iamVjdC5hc3NpZ24oe30sIFBsYXRmb3JtLnNlbGVjdCh7XG4gICAgICAgIGFuZHJvaWQ6IE9iamVjdC5hc3NpZ24oe30sIGZvbnRzLmFuZHJvaWQuYm9sZCksXG4gICAgfSkpLFxufSk7XG5leHBvcnQgeyBUZXh0RWxlbWVudCB9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