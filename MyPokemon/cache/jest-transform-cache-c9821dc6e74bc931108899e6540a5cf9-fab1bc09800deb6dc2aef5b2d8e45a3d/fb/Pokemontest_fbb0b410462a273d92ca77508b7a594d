d3f6251cbdf17dc8282867d121854ce9
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _ditto = _interopRequireDefault(require("./ditto.json"));
var _reactNative = require("@testing-library/react-native");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _Pokemon = _interopRequireDefault(require("../UI/components/Pokemon"));
var pokereq = _interopRequireWildcard(require("../services/pokemonRequests"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
global.fetch = require('jest-fetch-mock');
beforeEach(function () {
  fetch.resetMocks();
});
test('Does home screen work', (0, _asyncToGenerator2.default)(function* () {
  console.log(pokereq);
  pokereq.getOnePokemon = jest.fn().mockImplementation(function (url) {
    console.log(url);
    return JSON.stringify(_ditto.default);
  });
  var handlePress = jest.fn();
  (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Pokemon.default, {
    details: {
      name: 'ditto',
      url: 'https://pokeapi.co/api/v2/pokemon/1/'
    },
    press: handlePress
  }));
  yield (0, _reactNative.waitFor)(function () {
    expect(pokereq.getOnePokemon).toHaveBeenCalled();
    console.log('it fired');
  });
  yield (0, _reactNative.waitFor)(function () {
    expect(_reactNative.screen.getByText('ditto')).toBeTruthy();
  });
  expect(_reactNative.screen.getByTestId('sprite').props.source.uri).toEqual('https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/132.png');
  _reactNative.fireEvent.press(yield _reactNative.screen.findByTestId('pressable'));
  expect(handlePress).toBeCalledWith(_ditto.default);
  expect(pokereq.getOnePokemon).toBeCalled();
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnbG9iYWwiLCJmZXRjaCIsInJlcXVpcmUiLCJiZWZvcmVFYWNoIiwicmVzZXRNb2NrcyIsInRlc3QiLCJjb25zb2xlIiwibG9nIiwicG9rZXJlcSIsImdldE9uZVBva2Vtb24iLCJqZXN0IiwiZm4iLCJtb2NrSW1wbGVtZW50YXRpb24iLCJ1cmwiLCJKU09OIiwic3RyaW5naWZ5IiwiZGl0dG8iLCJoYW5kbGVQcmVzcyIsInJlbmRlciIsIm5hbWUiLCJ3YWl0Rm9yIiwiZXhwZWN0IiwidG9IYXZlQmVlbkNhbGxlZCIsInNjcmVlbiIsImdldEJ5VGV4dCIsInRvQmVUcnV0aHkiLCJnZXRCeVRlc3RJZCIsInByb3BzIiwic291cmNlIiwidXJpIiwidG9FcXVhbCIsImZpcmVFdmVudCIsInByZXNzIiwiZmluZEJ5VGVzdElkIiwidG9CZUNhbGxlZFdpdGgiLCJ0b0JlQ2FsbGVkIl0sInNvdXJjZXMiOlsiUG9rZW1vbi50ZXN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkaXR0byBmcm9tICcuL2RpdHRvLmpzb24nO1xuaW1wb3J0IHtcbiAgcmVuZGVyLFxuICBzY3JlZW4sXG4gIGZpcmVFdmVudCxcbiAgYWN0LFxuICB3YWl0Rm9yLFxufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFBva2Vtb24gZnJvbSAnLi4vVUkvY29tcG9uZW50cy9Qb2tlbW9uJztcbmltcG9ydCAqIGFzIHBva2VyZXEgZnJvbSAnLi4vc2VydmljZXMvcG9rZW1vblJlcXVlc3RzJztcblxuZ2xvYmFsLmZldGNoID0gcmVxdWlyZSgnamVzdC1mZXRjaC1tb2NrJyk7XG5cbmJlZm9yZUVhY2goKCkgPT4ge1xuICBmZXRjaC5yZXNldE1vY2tzKCk7XG59KTtcblxuLypcbnRlc3QoJ3JldHVybnMgcmVzdWx0IGlmIG9iamVjdCcsICgpID0+IHtcbiAgZmV0Y2gubW9ja1Jlc3BvbnNlT25jZShKU09OLnN0cmluZ2lmeShkaXR0bykpO1xuICBjb25zdCBvblJlc3BvbnNlID0gamVzdC5mbigpO1xuICBjb25zdCBvbkVycm9yID0gamVzdC5mbigpO1xuICByZXR1cm4gZ2V0T25lUG9rZW1vbigpXG4gICAgLnRoZW4ob25SZXNwb25zZSlcbiAgICAuY2F0Y2gob25FcnJvcilcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICBleHBlY3Qob25SZXNwb25zZSkudG9IYXZlQmVlbkNhbGxlZCgpO1xuICAgICAgZXhwZWN0KG9uUmVzcG9uc2UubW9jay5jYWxsc1swXVswXSkudG9FcXVhbChkaXR0byk7XG4gICAgICBjb25zb2xlLmxvZyhvblJlc3BvbnNlLm1vY2suY2FsbHMpO1xuICAgIH0pO1xufSk7XG4qL1xuXG50ZXN0KCdEb2VzIGhvbWUgc2NyZWVuIHdvcmsnLCBhc3luYyAoKSA9PiB7XG4gIC8vZmV0Y2gubW9ja1Jlc3BvbnNlT25jZShKU09OLnN0cmluZ2lmeShkaXR0bykpO1xuICBjb25zb2xlLmxvZyhwb2tlcmVxKTtcbiAgLypcbiAgamVzdC5zcHlPbihwb2tlcmVxLCAnZ2V0T25lUG9rZW1vbicpLm1vY2tJbXBsZW1lbnRhdGlvbigoKSA9PiB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGRpdHRvKTtcbiAgfSk7XG4gICovXG4gIHBva2VyZXEuZ2V0T25lUG9rZW1vbiA9IGplc3QuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24odXJsID0+IHtcbiAgICBjb25zb2xlLmxvZyh1cmwpO1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShkaXR0byk7XG4gIH0pO1xuICAvL2plc3QudXNlRmFrZVRpbWVycygpO1xuICBjb25zdCBoYW5kbGVQcmVzcyA9IGplc3QuZm4oKTtcbiAgLy9hc3luYyBmdW5jdGlvbiB3YWl0KCkge1xuICByZW5kZXIoXG4gICAgPFBva2Vtb25cbiAgICAgIGRldGFpbHM9e3tcbiAgICAgICAgbmFtZTogJ2RpdHRvJyxcbiAgICAgICAgdXJsOiAnaHR0cHM6Ly9wb2tlYXBpLmNvL2FwaS92Mi9wb2tlbW9uLzEvJyxcbiAgICAgIH19XG4gICAgICBwcmVzcz17aGFuZGxlUHJlc3N9XG4gICAgLz4sXG4gICk7XG5cbiAgLy99XG4gIC8vYXdhaXQgd2FpdCgpO1xuICAvKlxuICAgIGF3YWl0IGFjdChhc3luYyAoKSA9PiB7XG4gICAgICBqZXN0LnJ1bkFsbFRpbWVycygpO1xuICAgIH0pO1xuICAgICovXG4gIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgIGV4cGVjdChwb2tlcmVxLmdldE9uZVBva2Vtb24pLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICBjb25zb2xlLmxvZygnaXQgZmlyZWQnKTtcbiAgfSk7XG4gIGF3YWl0IHdhaXRGb3IoKCkgPT4ge1xuICAgIGV4cGVjdChzY3JlZW4uZ2V0QnlUZXh0KCdkaXR0bycpKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuICBleHBlY3Qoc2NyZWVuLmdldEJ5VGVzdElkKCdzcHJpdGUnKS5wcm9wcy5zb3VyY2UudXJpKS50b0VxdWFsKFxuICAgICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vUG9rZUFQSS9zcHJpdGVzL21hc3Rlci9zcHJpdGVzL3Bva2Vtb24vMTMyLnBuZycsXG4gICk7XG5cbiAgZmlyZUV2ZW50LnByZXNzKGF3YWl0IHNjcmVlbi5maW5kQnlUZXN0SWQoJ3ByZXNzYWJsZScpKTtcbiAgZXhwZWN0KGhhbmRsZVByZXNzKS50b0JlQ2FsbGVkV2l0aChkaXR0byk7XG4gIGV4cGVjdChwb2tlcmVxLmdldE9uZVBva2Vtb24pLnRvQmVDYWxsZWQoKTtcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQXVEO0FBQUE7QUFBQTtBQUV2REEsTUFBTSxDQUFDQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUV6Q0MsVUFBVSxDQUFDLFlBQU07RUFDZkYsS0FBSyxDQUFDRyxVQUFVLEVBQUU7QUFDcEIsQ0FBQyxDQUFDO0FBa0JGQyxJQUFJLENBQUMsdUJBQXVCLGtDQUFFLGFBQVk7RUFFeENDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxPQUFPLENBQUM7RUFNcEJBLE9BQU8sQ0FBQ0MsYUFBYSxHQUFHQyxJQUFJLENBQUNDLEVBQUUsRUFBRSxDQUFDQyxrQkFBa0IsQ0FBQyxVQUFBQyxHQUFHLEVBQUk7SUFDMURQLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDTSxHQUFHLENBQUM7SUFDaEIsT0FBT0MsSUFBSSxDQUFDQyxTQUFTLENBQUNDLGNBQUssQ0FBQztFQUM5QixDQUFDLENBQUM7RUFFRixJQUFNQyxXQUFXLEdBQUdQLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0VBRTdCLElBQUFPLG1CQUFNLEVBQ0oscUJBQUMsZ0JBQU87SUFDTixPQUFPLEVBQUU7TUFDUEMsSUFBSSxFQUFFLE9BQU87TUFDYk4sR0FBRyxFQUFFO0lBQ1AsQ0FBRTtJQUNGLEtBQUssRUFBRUk7RUFBWSxFQUNuQixDQUNIO0VBU0QsTUFBTSxJQUFBRyxvQkFBTyxFQUFDLFlBQU07SUFDbEJDLE1BQU0sQ0FBQ2IsT0FBTyxDQUFDQyxhQUFhLENBQUMsQ0FBQ2EsZ0JBQWdCLEVBQUU7SUFDaERoQixPQUFPLENBQUNDLEdBQUcsQ0FBQyxVQUFVLENBQUM7RUFDekIsQ0FBQyxDQUFDO0VBQ0YsTUFBTSxJQUFBYSxvQkFBTyxFQUFDLFlBQU07SUFDbEJDLE1BQU0sQ0FBQ0UsbUJBQU0sQ0FBQ0MsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUNDLFVBQVUsRUFBRTtFQUNoRCxDQUFDLENBQUM7RUFDRkosTUFBTSxDQUFDRSxtQkFBTSxDQUFDRyxXQUFXLENBQUMsUUFBUSxDQUFDLENBQUNDLEtBQUssQ0FBQ0MsTUFBTSxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsT0FBTyxDQUMzRCxrRkFBa0YsQ0FDbkY7RUFFREMsc0JBQVMsQ0FBQ0MsS0FBSyxPQUFPVCxtQkFBTSxDQUFDVSxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7RUFDdkRaLE1BQU0sQ0FBQ0osV0FBVyxDQUFDLENBQUNpQixjQUFjLENBQUNsQixjQUFLLENBQUM7RUFDekNLLE1BQU0sQ0FBQ2IsT0FBTyxDQUFDQyxhQUFhLENBQUMsQ0FBQzBCLFVBQVUsRUFBRTtBQUM1QyxDQUFDLEVBQUMifQ==