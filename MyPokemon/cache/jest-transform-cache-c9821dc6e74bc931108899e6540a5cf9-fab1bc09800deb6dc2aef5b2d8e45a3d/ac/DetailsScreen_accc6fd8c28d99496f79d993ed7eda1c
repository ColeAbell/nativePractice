bcbb851789db0f735607e26fa2e0de73
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DetailsScreen;
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _reactNative = require("react-native");
var _reactRedux = require("react-redux");
var _favoritesSlice = require("../../../store/favoritesSlice");
var _FavoriteButton = _interopRequireDefault(require("../FavoriteButton"));
var _reactNativeElements = require("react-native-elements");
var _jsxRuntime = require("react/jsx-runtime");
function DetailsScreen(_ref) {
  var route = _ref.route,
    navigation = _ref.navigation;
  var _useState = (0, _react.useState)({
      sprites: [],
      name: '',
      types: [],
      isFavorite: false
    }),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    pokeDeets = _useState2[0],
    setPokeDeets = _useState2[1];
  var favorites = (0, _reactRedux.useSelector)(function (state) {
    return state.favoritesInfo.favorites;
  });
  var dispatch = (0, _reactRedux.useDispatch)();
  function addFav(name) {
    dispatch(_favoritesSlice.favoriteActions.addFavorite(name));
    console.log('it reached');
  }
  function removeFav(name) {
    dispatch(_favoritesSlice.favoriteActions.removeFavorite(name));
  }
  (0, _react.useEffect)(function () {
    var details = route.params.deets;
    var images = [0, 0];
    var ptypes = [];
    var backupImages = [0, 0];
    for (var key in details.sprites) {
      if (key === 'front_shiny') {
        images[0] = details.sprites[key];
      } else if (key === 'back_shiny') {
        images[1] = details.sprites[key];
      } else if (key === 'front_default') {
        backupImages[0] = details.sprites[key];
      } else if (key === 'back_default') {
        backupImages[1] = details.sprites[key];
      }
    }
    if (images.length < 2) {
      if (images[0] === 0) {
        images[0] = backupImages[0];
      } else if (images[1] === 0) {
        images[1] = backupImages[1];
      }
    }
    for (var i = 0; i < details.types.length; i++) {
      ptypes.push(details.types[i].type.name);
    }
    var fav = favorites.includes(details.name);
    console.log(fav);
    navigation.setOptions({
      headerRight: function headerRight() {
        return (0, _jsxRuntime.jsx)(_FavoriteButton.default, {
          fav: fav,
          name: details.name,
          addFav: addFav,
          removeFav: removeFav
        });
      }
    });
    setPokeDeets({
      sprites: images,
      name: details.name,
      types: ptypes,
      isFavorite: fav
    });
  }, []);
  if (pokeDeets.sprites.length === 0) {
    return (0, _jsxRuntime.jsx)(_reactNative.ActivityIndicator, {
      size: 'large'
    });
  }
  return (0, _jsxRuntime.jsxs)(_reactNative.SafeAreaView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.imageContainer,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: pokeDeets.sprites[0]
        },
        style: styles.sprite
      }), (0, _jsxRuntime.jsx)(_reactNative.Image, {
        source: {
          uri: pokeDeets.sprites[1]
        },
        style: styles.sprite
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.name,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: "Name:"
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text,
        children: pokeDeets.name.toUpperCase()
      })]
    }), (0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.types,
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.title,
        children: "Types:"
      }), pokeDeets.types.map(function (t) {
        return (0, _jsxRuntime.jsx)(_reactNative.View, {
          children: (0, _jsxRuntime.jsx)(_reactNative.Text, {
            style: styles.text,
            children: t
          })
        });
      })]
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  sprite: {
    width: 200,
    height: 200
  },
  imageContainer: {
    flex: 1,
    flexDirection: 'row',
    justifyContent: 'center'
  },
  name: {
    flex: 1,
    marginTop: 45
  },
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#9DF7F4'
  },
  types: {
    flex: 1
  },
  text: {
    fontWeight: 'bold',
    fontSize: 50
  },
  type: {
    justifyContent: 'center',
    alignItems: 'center'
  },
  title: {
    fontSize: 50,
    fontWeight: 'bold',
    textAlign: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,